---
version: "3.8"
networks:
  private_network:
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: ${net}
services:
####################### NGINX PROXY MANAGER ########################
  npm_app:
    image: 'jc21/nginx-proxy-manager:latest'
    env_file: /srv/docker/.env
    restart: unless-stopped
    container_name: npm_app
    hostname: npm_app
    depends_on:
      - npm_db
    ports:
      # These ports are in format <host-port>:<container-port>
      - 80:80 # Public HTTP Port
      - 443:443 # Public HTTPS Port
      - 61081:81 # Admin Web Port
    environment:
      DB_MYSQL_HOST: "npm_db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: ""
      DB_MYSQL_NAME: "npm"
      DISABLE_IPV6: 'true'
    volumes:
      - ${npm_data}:/data
      - ${npm_ssl}:/etc/letsencrypt
    networks:
      private_network:
        ipv4_address: ${npm_app_ip}
    dns:
    - ${ad_ip}
    mem_limit: 512M
    mem_reservation: 256M
    cpus: 0.5
    healthcheck:
     test: ["CMD", "/bin/check-health"]
     interval: 10s
     timeout: 3s
####################### NGINX PROXY MANAGER DATABASE ########################
  npm_db:
    image: 'jc21/mariadb-aria:latest'
    restart: always
    container_name: npm_db
    hostname: npm_db
    environment:
      MYSQL_ROOT_PASSWORD: ''
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: ''
    volumes:
      - ${npm_db}:/var/lib/mysql
    mem_limit: 512M
    mem_reservation: 256M
    cpus: 0.4
    networks:
      private_network:
        ipv4_address: ${npm_db_ip}
####################### WIREGUARD ########################
  wg-easy:
    image: weejewel/wg-easy:latest
    restart: unless-stopped
    container_name: wireguard
    hostname: wireguard
    depends_on:
      - adguard
    environment:
      - WG_HOST=xxx.duckdns.org
      - PASSWORD=
#      - WG_PORT=51820
      - WG_DEFAULT_ADDRESS=10.200.1.1x
      - WG_DEFAULT_DNS=10.200.0.254
      - WG_PERSISTENT_KEEPALIVE=25
    volumes:
      - ${wg_data}:/etc/wireguard
    ports:
      - 51820:51820/udp
#      - 51821:51821/tcp
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    mem_limit: 512M
    mem_reservation: 256M
    cpus: 0.5
    dns:
    - ${ad_ip}
    networks:
      private_network:
        ipv4_address: ${wg_ip}
####################### ADGUARD DNS SERVER  ########################
  adguard:
    image: adguard/adguardhome:latest
    restart: always
    container_name: adguard
    hostname: adguard
    environment:
      - TZ=Europe/Madrid
    ports:
      - 53:53/tcp
      - 53:53/udp
#      - 784:784/udp ## Comentado por no usarse
#      - 853:853/tcp ## Comentado por no usarse
      - 3000:3000/tcp
    volumes:
      - ${ad_work}:/opt/adguardhome/work
      - ${ad_conf}:/opt/adguardhome/conf
    mem_limit: 512M
    mem_reservation: 256M
    cpus: 0.4
    networks:
      private_network:
        ipv4_address: ${ad_ip}
####################### HOMARR ########################
  homarr:
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    container_name: homarr
    hostname: homarr
#    ports:
#      - 7575:7575/tcp
    volumes:
      - ${h_conf}:/app/data/configs
      - ${h_icons}:/app/public/icons
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PASSWORD=
      - TZ=Europe/Madrid
    mem_limit: 256M
    mem_reservation: 256M
    cpus: 0.4
    dns:
    - ${ad_ip}
    networks:
      private_network:
        ipv4_address: ${h_ip}
####################### BOOKSTACK DB ########################
  bookstack_db:
    image: yobasystems/alpine-mariadb:latest
    container_name: bookstack_db
    restart: unless-stopped
    hostname: bookstack_db
    environment:
    - MYSQL_ROOT_PASSWORD=
    - MYSQL_DATABASE=bookstack
    - MYSQL_USER=bookstack
    - MYSQL_PASSWORD=pwbookstack2022
    - TZ=Europe/Madrid
    volumes:
    - ${book_db}:/var/lib/mysql
    mem_limit: 512M
    mem_reservation: 256M
    cpus: 0.5
    networks:
      private_network:
        ipv4_address: ${book_db_ip}
####################### BOOKSTACK APP ########################
  bookstack:
    image: solidnerd/bookstack:latest
    container_name: bookstack_app
    restart: unless-stopped
    hostname: bookstack_app
    depends_on:
    - bookstack_db
    environment:
    - DB_HOST=bookstack_db:3306
    - DB_DATABASE=bookstack
    - DB_USERNAME=bookstack
    - DB_PASSWORD=pwbookstack2022
    - APP_URL=https://
    volumes:
    - ${book_app_1}:/var/www/bookstack/public/uploads
    - ${book_app_2}:/var/www/bookstack/storage/uploads
#    ports:
#    - "9080:8080"
    dns:
    - ${ad_ip}
    mem_limit: 512M
    mem_reservation: 256M
    cpus: 0.4
    networks:
      private_network:
        ipv4_address: ${book_app_ip}
####################### PLANKA APP ##########################
  planka:
    image: ghcr.io/plankanban/planka:latest
    container_name: planka_app
    restart: unless-stopped
    depends_on:
      - postgres
    command: >
      bash -c
        "for i in `seq 1 30`; do
          ./start.sh &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 seconds...\";
          sleep 5;
        done; (exit $$s)"
    volumes:
      - /srv/docker/planka/user-avatars:/app/public/user-avatars
      - /srv/docker/planka/project-background-images:/app/public/project-background-images
      - /srv/docker/planka/attachments:/app/private/attachments
#    ports:
#      - 3180:1337
    environment:
      - BASE_URL=https://
#      - BASE_URL=http://10.10.0.251:3180
      - TRUST_PROXY=0
      - DATABASE_URL=postgresql://postgres@postgres/planka
      - SECRET_KEY=notsecretkey
    dns:
    - ${ad_ip}
    mem_limit: 512M
    mem_reservation: 256M
    cpus: 0.7
    networks:
      private_network:
        ipv4_address: 10.200.0.20
####################### PLANKA DB ########################
  postgres:
    image: postgres:14-alpine
    container_name: planka_db
    restart: unless-stopped
    volumes:
      - /srv/docker/planka/db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=planka
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      private_network:
        ipv4_address: 10.200.0.21
    mem_limit: 512M
    mem_reservation: 256M
    cpus: 0.5

volumes:
 mysql-data:
 uploads:
 storage-uploads:
 user-avatars:
 project-background-images:
 attachments:
 db-data:
