---
version: "3.8"
## Redes que usaremos ###
networks:
  backend:
    ipam:
      driver: default
      config:
        - subnet: 10.100.0.0/24

services:
####################### NGINX PROXY MANAGER ########################
  proxy_app: #nombre del servicio
    image: 'jc21/nginx-proxy-manager:latest' # imagen que se requiere para container
    env_file: /srv/docker/.env
    restart: unless-stopped #politicas de reinicio
    container_name: npm_app # nombre queda daremos al contenedor
    hostname: npm_app # nombre de host dentro de la red
    depends_on: # que 
      - npm_db
    ports:
      # These ports are in format <host-port>:<container-port>
      - 80:80 # Public HTTP Port
      - 443:443 # Public HTTPS Port
      - 61081:81 # Admin Web Port
    environment:
      DB_MYSQL_HOST: ''
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: ''
      DB_MYSQL_PASSWORD: ''
      DB_MYSQL_NAME: ''
      DISABLE_IPV6: 'true'
    volumes:
      - ${npm_data}:/data
      - ${npm_ssl}:/etc/letsencrypt
    networks:
      private_network:
        ipv4_address: ${npm_app_ip}
    dns:
    - ${ad_ip}
    mem_limit: 512M
    mem_reservation: 256M
    cpus: 0.5
    healthcheck:
     test: ["CMD", "/bin/check-health"]
     interval: 10s
     timeout: 3s
####################### NGINX PROXY MANAGER DATABASE ########################
  npm_db:
    image: 'jc21/mariadb-aria:latest'
    restart: always
    container_name: npm_db
    hostname: npm_db
    environment:
      MYSQL_ROOT_PASSWORD: ''
      MYSQL_DATABASE: ''
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: ''
    volumes:
      - ${npm_db}:/var/lib/mysql
    mem_limit: 512M
    mem_reservation: 256M
    cpus: 0.5
    networks:
      private_network:
        ipv4_address: ${npm_db_ip}
